import coreModule = require("./modules/core");
import customersModule = require("./modules/customers");
import ordersModule = require("./modules/orders");
import subscriptionsModule = require("./modules/subscriptions");
import utilsModule = require("./modules/utils");
export let initializeRazorpay: typeof coreModule.initializeRazorpay;
export let _resetRazorpayInstance: typeof coreModule._resetRazorpayInstance;
export let createRazorpayCustomer: typeof customersModule.createRazorpayCustomer;
export let fetchRazorpayCustomer: typeof customersModule.fetchRazorpayCustomer;
export let updateRazorpayCustomer: typeof customersModule.updateRazorpayCustomer;
export let createRazorpayOrder: typeof ordersModule.createRazorpayOrder;
export let fetchPaymentDetails: typeof ordersModule.fetchPaymentDetails;
export let capturePayment: typeof ordersModule.capturePayment;
export let createRefund: typeof ordersModule.createRefund;
export let createRazorpayPlan: typeof subscriptionsModule.createRazorpayPlan;
export let createRazorpaySubscription: typeof subscriptionsModule.createRazorpaySubscription;
export let updateRazorpaySubscription: typeof subscriptionsModule.updateRazorpaySubscription;
export let cancelRazorpaySubscription: typeof subscriptionsModule.cancelRazorpaySubscription;
export let fetchRazorpaySubscription: typeof subscriptionsModule.fetchRazorpaySubscription;
export let verifySubscriptionPaymentSignature: typeof subscriptionsModule.verifySubscriptionPaymentSignature;
export let pauseRazorpaySubscription: typeof subscriptionsModule.pauseRazorpaySubscription;
export let resumeRazorpaySubscription: typeof subscriptionsModule.resumeRazorpaySubscription;
export let calculateProratedAmount: typeof utilsModule.calculateProratedAmount;
export let processRefundToCredits: typeof utilsModule.processRefundToCredits;
export let handleFailedPayments: typeof utilsModule.handleFailedPayments;
//# sourceMappingURL=razorpay.d.ts.map