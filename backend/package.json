{
	"name": "backend",
	"version": "1.0.0",
	"type": "commonjs",
	"main": "index.js",
	"scripts": {
		"dev": "lsof -ti:5000 | xargs -r kill && nodemon src/index.js",
		"dev:all-services": "./scripts/start-all-services.sh && npm run dev",
		"build": "tsc",
		"build:frontend": "cd ../frontend && npm run build && rm -rf ../backend/public && mkdir -p ../backend/public && cp -r dist/* ../backend/public/ && cp -r ../backend/static-assets/* ../backend/public/",
		"start": "npm run build:frontend && node src/index.js",
		"start:with-services": "./scripts/start-all-services.sh && npm run start",
		"start:production": "npm run build && npm run build:frontend && node dist/index.js",
		"typecheck": "tsc --noEmit",
		"check": "tsc --noEmit true",
		"export": "tsc --emitDeclarationOnly true --noEmitOnError",
		"lint": "eslint . --fix",
		"test": "echo \"Error: no test specified\" && exit 1",
		"db:migrate": "node src/db/scripts/migrate.js",
		"test:mcp": "node test-mcp-compliance.js",
		"services:list": "node -e \"import('./src/mcp-servers/config/service-registry.js').then(m => m.serviceRegistry.loadServices().then(() => console.log('Available services:', m.serviceRegistry.getServiceNames())))\"",
		"services:stats": "node -e \"import('./src/mcp-servers/config/service-registry.js').then(m => m.serviceRegistry.loadServices().then(() => console.log(JSON.stringify(m.serviceRegistry.getStats(), null, 2))))\"",
		"services:start": "pm2 start ecosystem.config.js",
		"services:stop": "pm2 delete ecosystem.config.js",
		"services:restart": "pm2 restart ecosystem.config.js",
		"services:status": "pm2 status",
		"services:logs": "pm2 logs",
		"services:monit": "pm2 monit"
	},
	"keywords": [],
	"author": "",
	"license": "ISC",
	"description": "",
	"dependencies": {
		"@modelcontextprotocol/sdk": "^1.15.1",
		"axios": "^1.11.0",
		"bcrypt": "^6.0.0",
		"cookie-parser": "^1.4.7",
		"cors": "^2.8.5",
		"dotenv": "^17.1.0",
		"express": "^4.21.2",
		"express-rate-limit": "^7.5.1",
		"express-session": "^1.18.1",
		"googleapis": "^154.0.0",
		"helmet": "^8.1.0",
		"js-yaml": "^4.1.0",
		"jsonwebtoken": "^9.0.2",
		"node-pg-migrate": "^8.0.3",
		"nodemailer": "^7.0.5",
		"pg": "^8.16.3",
		"razorpay": "^2.9.6",
		"undici": "^5.29.0",
		"uuid": "^11.1.0",
		"winston": "^3.17.0",
		"winston-daily-rotate-file": "^5.0.0",
		"zod": "^3.25.76"
	},
	"devDependencies": {
		"@eslint/js": "^9.30.1",
		"@types/bcrypt": "^5.0.2",
		"@types/cookie-parser": "^1.4.9",
		"@types/cors": "^2.8.19",
		"@types/eslint__js": "^8.42.3",
		"@types/express": "^5.0.3",
		"@types/express-rate-limit": "^5.1.3",
		"@types/express-session": "^1.18.2",
		"@types/jest": "^30.0.0",
		"@types/js-yaml": "^4.0.9",
		"@types/jsonwebtoken": "^9.0.10",
		"@types/node": "^24.0.10",
		"@types/nodemailer": "^6.4.17",
		"@types/pg": "^8.15.4",
		"@types/uuid": "^10.0.0",
		"eslint": "^9.30.1",
		"eslint-config-prettier": "^10.1.5",
		"eslint-plugin-prettier": "^5.5.1",
		"jest": "^30.0.4",
		"nodemon": "^3.1.10",
		"prettier": "^3.6.2",
		"supertest": "^7.1.3",
		"typescript": "^5.8.3",
		"typescript-eslint": "^8.36.0"
	}
}
