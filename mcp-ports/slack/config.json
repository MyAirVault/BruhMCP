{
  "name": "slack",
  "displayName": "Slack",
  "description": "Slack is a channel-based messaging platform. With Slack, people can work together more effectively",
  "category": "collaboration",
  "iconUrl": "https://cdn.jsdelivr.net/npm/simple-icons@v9/icons/slack.svg",
  "port": 49458  ,
  "api": {
    "baseURL": "https://slack.com/api",
    "version": "v1",
    "documentation": "https://api.slack.com/methods"
  },
  "auth": {
    "type": "oauth2",
    "fields": [
      {
        "name": "client_id",
        "type": "text",
        "required": true,
        "description": "Slack App Client ID"
      },
      {
        "name": "client_secret",
        "type": "password",
        "required": true,
        "description": "Slack App Client Secret"
      },
      {
        "name": "verification_token",
        "type": "password",
        "required": false,
        "description": "Slack App Verification Token"
      }
    ],
    "oauth": {
      "redirect_uri": "https://backend.composio.dev/api/v1/auth-apps/add",
      "scopes": ["channels:history", "chat:write", "team:read", "channels:read", "users:read", "reminders:write", "reactions:read"],
      "authorization_url": "https://slack.com/oauth/v2/authorize",
      "token_url": "https://slack.com/api/oauth.v2.access"
    }
  },
  "tools": [
    {
      "name": "send_message",
      "description": "Send a message to a Slack channel",
      "endpoint": "/chat.postMessage",
      "method": "POST",
      "parameters": {
        "channel": {
          "type": "string",
          "required": true,
          "description": "Channel ID or name to send message to"
        },
        "text": {
          "type": "string",
          "required": true,
          "description": "Message text to send"
        },
        "thread_ts": {
          "type": "string",
          "required": false,
          "description": "Timestamp of parent message to reply in thread"
        }
      }
    },
    {
      "name": "update_message",
      "description": "Update a Slack message",
      "endpoint": "/chat.update",
      "method": "POST",
      "parameters": {
        "channel": {
          "type": "string",
          "required": true,
          "description": "Channel ID containing the message"
        },
        "ts": {
          "type": "string",
          "required": true,
          "description": "Timestamp of message to update"
        },
        "text": {
          "type": "string",
          "required": true,
          "description": "New message text"
        }
      }
    },
    {
      "name": "list_conversations",
      "description": "List conversations (channels) in workspace",
      "endpoint": "/conversations.list",
      "method": "GET",
      "parameters": {
        "types": {
          "type": "string",
          "required": false,
          "description": "Types of conversations to include (public_channel, private_channel, mpim, im)",
          "default": "public_channel"
        },
        "limit": {
          "type": "number",
          "required": false,
          "description": "Maximum number of items to return",
          "default": 100
        }
      }
    },
    {
      "name": "fetch_conversation_history",
      "description": "Fetch conversation history from a channel",
      "endpoint": "/conversations.history",
      "method": "GET",
      "parameters": {
        "channel": {
          "type": "string",
          "required": true,
          "description": "Channel ID to fetch history from"
        },
        "limit": {
          "type": "number",
          "required": false,
          "description": "Number of messages to return",
          "default": 100
        },
        "oldest": {
          "type": "string",
          "required": false,
          "description": "Start of time range of messages to include"
        }
      }
    },
    {
      "name": "list_users",
      "description": "List all Slack team users",
      "endpoint": "/users.list",
      "method": "GET",
      "parameters": {
        "limit": {
          "type": "number",
          "required": false,
          "description": "Maximum number of users to return",
          "default": 100
        }
      }
    },
    {
      "name": "add_reaction",
      "description": "Add reaction to message",
      "endpoint": "/reactions.add",
      "method": "POST",
      "parameters": {
        "channel": {
          "type": "string",
          "required": true,
          "description": "Channel containing the message"
        },
        "timestamp": {
          "type": "string",
          "required": true,
          "description": "Timestamp of message to react to"
        },
        "name": {
          "type": "string",
          "required": true,
          "description": "Emoji name (without colons)"
        }
      }
    },
    {
      "name": "remove_reaction",
      "description": "Remove reaction from item",
      "endpoint": "/reactions.remove",
      "method": "POST",
      "parameters": {
        "channel": {
          "type": "string",
          "required": true,
          "description": "Channel containing the message"
        },
        "timestamp": {
          "type": "string",
          "required": true,
          "description": "Timestamp of message"
        },
        "name": {
          "type": "string",
          "required": true,
          "description": "Emoji name to remove"
        }
      }
    },
    {
      "name": "create_reminder",
      "description": "Create a reminder",
      "endpoint": "/reminders.add",
      "method": "POST",
      "parameters": {
        "text": {
          "type": "string",
          "required": true,
          "description": "Content of the reminder"
        },
        "time": {
          "type": "string",
          "required": true,
          "description": "When the reminder should occur"
        },
        "user": {
          "type": "string",
          "required": false,
          "description": "User to send reminder to"
        }
      }
    },
    {
      "name": "search_messages",
      "description": "Search messages",
      "endpoint": "/search.messages",
      "method": "GET",
      "parameters": {
        "query": {
          "type": "string",
          "required": true,
          "description": "Search query"
        },
        "count": {
          "type": "number",
          "required": false,
          "description": "Number of items to return",
          "default": 20
        }
      }
    }
  ]
}