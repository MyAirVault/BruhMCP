{
  "name": "freshdesk",
  "displayName": "Freshdesk",
  "description": "Provides customer support software with ticketing, knowledge base, and automation features for efficient helpdesk operations. A comprehensive customer service platform for managing support requests.",
  "category": "crm",
  "iconUrl": "https://cdn.jsdelivr.net/npm/simple-icons@v9/icons/freshdesk.svg",
  "port": 49292  ,
  "api": {
    "baseURL": "https://{subdomain}.freshdesk.com",
    "version": "v2",
    "documentation": "https://v3.docs.composio.dev/tools/freshdesk"
  },
  "auth": {
    "type": "basic",
    "fields": [
      {
        "name": "username",
        "type": "text",
        "required": true,
        "description": "Freshdesk username or API key"
      },
      {
        "name": "password",
        "type": "password",
        "required": true,
        "description": "Freshdesk password (use 'X' when using API key as username)"
      },
      {
        "name": "subdomain",
        "type": "text",
        "required": true,
        "description": "Freshdesk subdomain"
      }
    ]
  },
  "tools": [
    {
      "name": "create_ticket",
      "description": "Create a new ticket in Freshdesk",
      "endpoint": "/api/v2/tickets",
      "method": "POST",
      "parameters": {
        "subject": {
          "type": "string",
          "required": true,
          "description": "Ticket subject"
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "Ticket description"
        },
        "email": {
          "type": "string",
          "required": true,
          "description": "Requester email address"
        },
        "priority": {
          "type": "number",
          "required": false,
          "description": "Ticket priority (1=Low, 2=Medium, 3=High, 4=Urgent)"
        },
        "status": {
          "type": "number",
          "required": false,
          "description": "Ticket status (2=Open, 3=Pending, 4=Resolved, 5=Closed)"
        },
        "source": {
          "type": "number",
          "required": false,
          "description": "Ticket source (1=Email, 2=Portal, 3=Phone, 7=Chat)"
        }
      }
    },
    {
      "name": "delete_ticket",
      "description": "Delete a ticket in Freshdesk",
      "endpoint": "/api/v2/tickets/{ticketId}",
      "method": "DELETE",
      "parameters": {
        "ticketId": {
          "type": "string",
          "required": true,
          "description": "Ticket ID to delete"
        }
      }
    },
    {
      "name": "get_tickets",
      "description": "Get tickets from Freshdesk with filters",
      "endpoint": "/api/v2/tickets",
      "method": "GET",
      "parameters": {
        "filter": {
          "type": "string",
          "required": false,
          "description": "Filter criteria (e.g., 'new_and_my_open')"
        },
        "page": {
          "type": "number",
          "required": false,
          "description": "Page number for pagination"
        },
        "per_page": {
          "type": "number",
          "required": false,
          "description": "Number of tickets per page (max 100)"
        }
      }
    },
    {
      "name": "list_all_tickets",
      "description": "List all tickets in Freshdesk",
      "endpoint": "/api/v2/tickets",
      "method": "GET",
      "parameters": {
        "page": {
          "type": "number",
          "required": false,
          "description": "Page number for pagination"
        },
        "per_page": {
          "type": "number",
          "required": false,
          "description": "Number of tickets per page (max 100)"
        },
        "updated_since": {
          "type": "string",
          "required": false,
          "description": "Filter tickets updated since this date (ISO 8601 format)"
        }
      }
    },
    {
      "name": "reply_to_ticket",
      "description": "Reply to a ticket in Freshdesk",
      "endpoint": "/api/v2/tickets/{ticketId}/reply",
      "method": "POST",
      "parameters": {
        "ticketId": {
          "type": "string",
          "required": true,
          "description": "Ticket ID to reply to"
        },
        "body": {
          "type": "string",
          "required": true,
          "description": "Reply message body"
        },
        "from_email": {
          "type": "string",
          "required": false,
          "description": "Email address of the reply sender"
        },
        "user_id": {
          "type": "number",
          "required": false,
          "description": "User ID of the reply sender"
        }
      }
    },
    {
      "name": "update_ticket",
      "description": "Update an existing ticket in Freshdesk",
      "endpoint": "/api/v2/tickets/{ticketId}",
      "method": "PUT",
      "parameters": {
        "ticketId": {
          "type": "string",
          "required": true,
          "description": "Ticket ID to update"
        },
        "subject": {
          "type": "string",
          "required": false,
          "description": "Updated ticket subject"
        },
        "description": {
          "type": "string",
          "required": false,
          "description": "Updated ticket description"
        },
        "priority": {
          "type": "number",
          "required": false,
          "description": "Updated ticket priority"
        },
        "status": {
          "type": "number",
          "required": false,
          "description": "Updated ticket status"
        }
      }
    },
    {
      "name": "view_ticket",
      "description": "View a specific ticket in Freshdesk",
      "endpoint": "/api/v2/tickets/{ticketId}",
      "method": "GET",
      "parameters": {
        "ticketId": {
          "type": "string",
          "required": true,
          "description": "Ticket ID to view"
        },
        "include": {
          "type": "string",
          "required": false,
          "description": "Additional data to include (conversations, requester, company, stats)"
        }
      }
    }
  ]
}