{
  "name": "zendesk",
  "displayName": "Zendesk",
  "description": "Provides customer support software with ticketing, live chat, and knowledge base features",
  "category": "support",
  "iconUrl": "https://cdn.jsdelivr.net/npm/simple-icons@v9/icons/zendesk.svg",
  "port": 49520  ,
  "api": {
    "baseURL": "https://{subdomain}.zendesk.com/api/v2",
    "version": "v2",
    "documentation": "https://developer.zendesk.com/api-reference/"
  },
  "auth": {
    "type": "oauth2",
    "fields": [
      {
        "name": "client_id",
        "type": "text",
        "required": true,
        "description": "Zendesk OAuth App Client ID"
      },
      {
        "name": "client_secret",
        "type": "password",
        "required": true,
        "description": "Zendesk OAuth App Client Secret"
      },
      {
        "name": "subdomain",
        "type": "text",
        "required": true,
        "description": "Zendesk subdomain (your-company in your-company.zendesk.com)"
      }
    ],
    "oauth": {
      "redirect_uri": "https://backend.composio.dev/api/v1/auth-apps/add",
      "scopes": [
        "organizations:read",
        "organizations:write",
        "tickets:read",
        "tickets:write",
        "users:read",
        "users:write",
        "webhooks:read",
        "webhooks:write"
      ],
      "authorization_url": "https://{subdomain}.zendesk.com/oauth/authorizations/new",
      "token_url": "https://{subdomain}.zendesk.com/oauth/tokens"
    }
  },
  "tools": [
    {
      "name": "create_ticket",
      "description": "Create a new Zendesk ticket",
      "endpoint": "/tickets.json",
      "method": "POST",
      "parameters": {
        "subject": {
          "type": "string",
          "required": true,
          "description": "Ticket subject"
        },
        "comment": {
          "type": "object",
          "required": true,
          "description": "Ticket comment with body text"
        },
        "priority": {
          "type": "string",
          "required": false,
          "description": "Ticket priority (urgent, high, normal, low)"
        },
        "type": {
          "type": "string",
          "required": false,
          "description": "Ticket type (problem, incident, question, task)"
        },
        "status": {
          "type": "string",
          "required": false,
          "description": "Ticket status (new, open, pending, hold, solved, closed)"
        },
        "requester_id": {
          "type": "number",
          "required": false,
          "description": "ID of the user requesting this ticket"
        },
        "assignee_id": {
          "type": "number",
          "required": false,
          "description": "ID of the agent assigned to this ticket"
        }
      }
    },
    {
      "name": "get_ticket",
      "description": "Get a specific Zendesk ticket",
      "endpoint": "/tickets/{ticketId}.json",
      "method": "GET",
      "parameters": {
        "ticketId": {
          "type": "string",
          "required": true,
          "description": "Ticket ID to retrieve"
        }
      }
    },
    {
      "name": "update_ticket",
      "description": "Update a Zendesk ticket",
      "endpoint": "/tickets/{ticketId}.json",
      "method": "PUT",
      "parameters": {
        "ticketId": {
          "type": "string",
          "required": true,
          "description": "Ticket ID to update"
        },
        "ticket": {
          "type": "object",
          "required": true,
          "description": "Ticket fields to update"
        }
      }
    },
    {
      "name": "delete_ticket",
      "description": "Delete a Zendesk ticket",
      "endpoint": "/tickets/{ticketId}.json",
      "method": "DELETE",
      "parameters": {
        "ticketId": {
          "type": "string",
          "required": true,
          "description": "Ticket ID to delete"
        }
      }
    },
    {
      "name": "reply_to_ticket",
      "description": "Reply to a Zendesk ticket",
      "endpoint": "/tickets/{ticketId}.json",
      "method": "PUT",
      "parameters": {
        "ticketId": {
          "type": "string",
          "required": true,
          "description": "Ticket ID to reply to"
        },
        "comment": {
          "type": "object",
          "required": true,
          "description": "Reply comment with body text"
        },
        "public": {
          "type": "boolean",
          "required": false,
          "description": "Whether the comment is public",
          "default": true
        }
      }
    },
    {
      "name": "create_organization",
      "description": "Create a new Zendesk organization",
      "endpoint": "/organizations.json",
      "method": "POST",
      "parameters": {
        "name": {
          "type": "string",
          "required": true,
          "description": "Organization name"
        },
        "domain_names": {
          "type": "array",
          "required": false,
          "description": "List of domain names associated with this organization"
        },
        "details": {
          "type": "string",
          "required": false,
          "description": "Organization details/notes"
        }
      }
    },
    {
      "name": "get_organization",
      "description": "Get a specific Zendesk organization",
      "endpoint": "/organizations/{organizationId}.json",
      "method": "GET",
      "parameters": {
        "organizationId": {
          "type": "string",
          "required": true,
          "description": "Organization ID to retrieve"
        }
      }
    },
    {
      "name": "get_organizations",
      "description": "Get Zendesk organizations",
      "endpoint": "/organizations.json",
      "method": "GET",
      "parameters": {
        "page": {
          "type": "number",
          "required": false,
          "description": "Page number for pagination",
          "default": 1
        },
        "per_page": {
          "type": "number",
          "required": false,
          "description": "Number of results per page",
          "default": 100
        }
      }
    },
    {
      "name": "update_organization",
      "description": "Update a Zendesk organization",
      "endpoint": "/organizations/{organizationId}.json",
      "method": "PUT",
      "parameters": {
        "organizationId": {
          "type": "string",
          "required": true,
          "description": "Organization ID to update"
        },
        "organization": {
          "type": "object",
          "required": true,
          "description": "Organization fields to update"
        }
      }
    },
    {
      "name": "delete_organization",
      "description": "Delete a Zendesk organization",
      "endpoint": "/organizations/{organizationId}.json",
      "method": "DELETE",
      "parameters": {
        "organizationId": {
          "type": "string",
          "required": true,
          "description": "Organization ID to delete"
        }
      }
    },
    {
      "name": "count_organizations",
      "description": "Count Zendesk organizations",
      "endpoint": "/organizations/count.json",
      "method": "GET",
      "parameters": {}
    },
    {
      "name": "get_about_me",
      "description": "Get information about the current user",
      "endpoint": "/users/me.json",
      "method": "GET",
      "parameters": {}
    }
  ]
}